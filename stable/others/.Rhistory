print(object.size(3))
print(object.size(3), units = "auto")
print(object.size(3), units = "Gb")
size(1:100)
size(1:1000)
size(1:1e3)
size(1:1e5)
size(1:1e7)
size(1:1e6)
size(1:1e5)
size(1:3e5)
size(1:2e5)
size(1:1e5)
size(1:1e8)
size(1:2e8)
size(1:3e8)
size(1:4e8)
size(1:5e8)
size(1:6e8)
size(1:8e8)
gc()
size
p = 10
q = 100
source("examples/linear_setup.R")
K.X
C
options(width = 150)
C
options(width = 150)
C
C
A
ls()
C
A
list(A)
knots.list
p
q
matrix(1:(p*q))
matrix(1:(p*q), 2)
matrix(1:(p*q), p)
matrix(1:(p*q), q)
matrix(1:(p*q), q, p)
C
knots.list
knots.c
knots.mu0
a <- list(a = list(1, 2), b = list(3, 4))
a
unlist(a)
unlist(a, recursive=F)
X.mats
ls()
source("examples/linear_setup.R")
source("examples/linear_setup.R")
source("examples/linear_setup.R")
traceback()
n
n
n
n
delta.knots
dim(delta.knots)
dim(delta.knots[[1]])
dim(delta.knots[[2]])
n
X.x.delta.xi(X.mats, delta.knots)
n
n
i
X.mats
dim(X.mats)
dim(X.mats[[1]])
dim(X.mats[[2]])
dim(X.mats[[3]])
n
n
n
knots
knots.list
delta.K
n
traceback()
n
n
n
dim(X.mats[[i+1]])
dim(delta.knots[[i]])
dim(delta.knots[[1]])
dim(delta.knots[[2]])
dim(X.mats[[1]])
dim(X.mats[[2]])
dim(X.mats[[3]])
mapply(crossprod, list(X.mats[[i + 1]]), delta.knots[[i]], 
    SIMPLIFY = FALSE)
mapply(crossprod, list(X.mats[[i + 1]]), delta.knots[[i]], 
    SIMPLIFY = FALSE)
mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), 
    SIMPLIFY = FALSE)
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
a = system.time(mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE))
dim(a)
dim(a[[1]])
dim(a[[2]])
lapply
class(A)
class(a)
a = mapply(crossprod, list(X.mats[[i + 1]]), list(delta.knots[[i]]), SIMPLIFY = FALSE)
class(a)
dim(a)
dim(a[[1]])
dim(a[[2]])
c <- X.mats
length(c)
c <- X.mats[c(2, 3)]
length(c)
class(c)
names(X.mats)
priorArgs
n
n
n
dim(X.delta.knots.lst)
dim(X.delta.knots.lst[[1]])
dim(X.delta.knots.lst[[2]])
X.delta.knots.lst
dim(X.delta.knots.lst[[1]][1])
dim(X.delta.knots.lst[[1]][[1]])
dim(X.delta.knots.lst[[1]][[2]])
dim(X.delta.knots.lst[[1]][[3]])
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
Q
n
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
Q
n
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
Q
n
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
Q
n
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
Q
n
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
C
t(A)
A
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
n
Q
n
n
n
nonempty.idx
nonempty.idx.full
q
p
n
Mat.used
Mat.used
dim(Mat.used)
p
q
Mat.lst
n
Part2.mat
n
n
n
n
n
n
n
n
n
nonempty.idx
nonempty.idx.full
p
q
C
p
p = 1
q = 75
n
nonempty.idx
C
p = 1
q = 75
dim(Mat.used)
dim(Mat.used)
dim(Mat.ary)
dim(Mat.ary)
dim(Mat.used)
dim(Mat.ary)
n
delta.knots
n
n
n
dim(A)
dim(delta.knots[[i]])
crossprod(A, delta.knots[[i]])
n
length(Part2.lst)
q
q.i
Q
system.time(X.x.delta.xi(X.mats, delta.knots, q.i))
n
n
n
n
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
getwd()
setwd(../../../)
setwd("../../../")
getwd()
source("examples/linear_setup.R")
ls()
n
Q
n
n
n
n
n
length(Mat.lst)
dim(Mat.lst[[1]])
dim(Mat.lst[[2]])
dim(Mat.lst[[199]])
dim(Mat.lst[[19]])
n
length(Part2.lst)
length(Part2.lst[[1]])
dim(Part2.lst[[1]][[1]])
dim(Part2.lst[[1]][[2]])
i
dim(Part2.lst[[2]][[2]])
dim(Part2.lst[[2]][[3]])
length(Part2.lst)
length(Part2.lst[[1]])
length(Part2.lst[[41]])
dim(Part2.lst[[41]])
dim(Part2.lst[[42]])
dim(Part2.lst[[70]])
dim(Part2.lst[[1]])
dim(Part2.lst[[2]])
length(Part2.lst)
length(Mat.lst)
mapply("%*%", Mat.lst, Part2.lst)
c <- mapply("%*%", Mat.lst, Part2.lst)
length(c)
dim(c)
class(c)
class(c[[1]])
class(c[[70]])
dim(c[[70]])
dim(c[[1]])
dim(c[[2]])
dim(c[[3]])
a <- list(a = matrix(1:15, 3, 5), b = matrix(1:6, 3))
a
unlist(a)
matrix(unlist(a), 3)
Q
n
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
system.time(Mat.x.A.k.I.x.K.x.delta.knots(Mat = Sigma4beta.tilde, 
    A = Y.Sigma.inv, delta.knots, p, q, q.i))
